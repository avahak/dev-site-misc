var c=Object.defineProperty;var h=(s,e,t)=>e in s?c(s,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):s[e]=t;var n=(s,e,t)=>h(s,typeof e!="symbol"?e+"":e,t);import{r as a,j as m}from"./index-Cg1H98zF.js";import{W as l,m as o,l as d,y as u,w as p,f as R,n as f,A as w,O as b,V as T}from"./OrbitControls-DV_4SOBH.js";class x{constructor(e){n(this,"container");n(this,"scene");n(this,"camera");n(this,"renderer");n(this,"cleanUpTasks");n(this,"animationRequestID",null);n(this,"lastTime",null);n(this,"cube",null);this.container=e,this.cleanUpTasks=[],this.renderer=new l({antialias:!0,alpha:!0}),this.renderer.setClearColor(0,0),e.appendChild(this.renderer.domElement),this.scene=this.setupScene(),this.camera=this.setupCamera(),this.setupResizeRenderer(),this.resizeRenderer(),this.cleanUpTasks.push(()=>{this.animationRequestID&&cancelAnimationFrame(this.animationRequestID)}),this.animate=this.animate.bind(this),this.animate()}resizeRenderer(){this.renderer.setPixelRatio(Math.min(window.devicePixelRatio,2));const{clientWidth:e,clientHeight:t}=this.container;this.renderer.setSize(e,t),this.camera instanceof o&&(this.camera.aspect=e/t,this.camera.updateProjectionMatrix())}setupResizeRenderer(){const e=new ResizeObserver(()=>{this.resizeRenderer()});e.observe(this.container),this.cleanUpTasks.push(()=>e.unobserve(this.container)),this.resizeRenderer()}cleanUp(){this.container.removeChild(this.renderer.domElement);for(const e of this.cleanUpTasks)e();this.renderer.dispose()}setupScene(){const e=new d,t=new u(1,1,1),i=new p;this.cube=new R(t,i),e.add(this.cube);const r=new f(16777215,200,0);return r.position.set(0,50,0),e.add(new w(14544639,.8)),e.add(r),e}setupCamera(){const e=new o(60,1,.1,1e3),t=new b(e,this.container);return this.cleanUpTasks.push(()=>t.dispose()),e.position.set(1,1,1.5),e.lookAt(new T(0,0,0)),e}animate(){var i;this.animationRequestID=requestAnimationFrame(this.animate);const e=performance.now()/1e3,t=this.lastTime?Math.max(Math.min(e-this.lastTime,.1),0):0;this.lastTime=e,(i=this.cube)==null||i.rotateY(.1*t),this.renderer.render(this.scene,this.camera)}}const v=()=>{const s=a.useRef(null);return a.useEffect(()=>{console.log("useEffect: ",s.current);const e=new x(s.current);return()=>{e.cleanUp()}},[]),m.jsx("div",{ref:s,style:{width:"100%",height:"100%"}})};export{v as default};
